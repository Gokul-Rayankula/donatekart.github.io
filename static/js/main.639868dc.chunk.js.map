{"version":3,"sources":["constants.js","images/palmleafcontainer.jpg","images/roundbowl.jpg","images/roundplate.jpg","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_SLIDE","title","cost","usestyles","makeStyles","image","width","height","header","textAlign","fontSize","fontWeight","marginTop","marginBottom","searchbutton","backgroundColor","color","marginLeft","text","card","alignItems","cursor","boxShadow","formControl","App","conversionrate","useRef","classes","useState","currency","setCurrency","a","fetch","then","res","json","rate","Number","rates","INR","USD","toFixed","response","current","useEffect","getapi","Typography","className","FormControl","InputLabel","inputlabel","id","Select","labelId","value","onChange","event","target","handleChange","MenuItem","Grid","container","spacing","item","xs","sm","md","Card","src","roundbowl","alt","Button","size","variant","roundplate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.639868dc.chunk.js","sourcesContent":["\r\nexport const PRODUCT_SLIDE=[\r\n    {title:'Palm leaf container',cost:50},\r\n    {title:'Palm leaf roundplate',cost:150},\r\n    {title:'Palm leaf roundtray',cost:100}\r\n]","export default __webpack_public_path__ + \"static/media/palmleafcontainer.6b1f3ea5.jpg\";","export default __webpack_public_path__ + \"static/media/roundbowl.9f1153ec.jpg\";","export default __webpack_public_path__ + \"static/media/roundplate.7f373d6e.jpg\";","import React,{useState,useEffect,useRef} from 'react';\nimport {PRODUCT_SLIDE} from './constants';\nimport container from './images/palmleafcontainer.jpg';\nimport roundbowl from './images/roundbowl.jpg';\nimport roundplate from './images/roundplate.jpg';\nimport {Grid,Typography,Card,Button,FormControl,InputLabel,Select,MenuItem} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\n\n\nfunction App() {\n const conversionrate=useRef(0);\n const classes=usestyles();\n const [currency,setCurrency]=useState('INR');\n const handleChange=(event) => {\n   setCurrency(currency => (event.target.value))\n };\n  useEffect(() =>{\n     getapi()\n     \n\n\n},[])\n\n  async function getapi(){\n   let url='http://api.exchangeratesapi.io/v1/latest?access_key=1c1cab8df626dff4d180c2743b13c25a&base=EUR' ;\n   let response=await fetch(url).then(res => res.json()).then(res => {\n     let rupee=Number(res.rates.INR)\n     let dollar=Number(res.rates.USD)\n     let rate=((1/rupee)*dollar)\n     rate=(1/rate).toFixed(2)\n     return rate\n   })\n   conversionrate.current=response\n   return response\n  }\n  return(\n    <>\n       <Typography className={classes.header}>\n                OUR PRODUCTS\n       </Typography>\n       <FormControl className={classes.formControl}>\n        <InputLabel classes={classes.inputlabel} id=\"selectlabel\">Currency</InputLabel>\n        <Select\n          labelId=\"selectlabel\"\n          value={currency}\n          onChange={(event) => handleChange(event)}\n        >\n          <MenuItem value={'INR'}>INR</MenuItem>\n          <MenuItem value={'USD'}>USD</MenuItem>\n        </Select>\n      </FormControl> \n       <Grid container spacing={2}>\n        <Grid item xs={12} sm={6} md={4}>\n         <Card className={classes.card}>\n            <img className={classes.image} src={roundbowl} alt='productimg' />\n            <Typography className={classes.text}>{PRODUCT_SLIDE[0].title}</Typography>\n           {currency==='INR' ?\n           <Typography className={classes.text}>RS {PRODUCT_SLIDE[0].cost}</Typography>:\n           <Typography className={classes.text}>$ {PRODUCT_SLIDE[0].cost*conversionrate.current}</Typography>} \n            \n            <Button size='large' className={classes.searchbutton}   variant='outlined' >Search Options</Button>\n        </Card>\n        </Grid>  \n        <Grid item xs={12} sm={6} md={4}>\n        <Card className={classes.card}>\n            <img className={classes.image} src={roundplate} alt='productimg' />\n            <Typography className={classes.text}>{PRODUCT_SLIDE[1].title}</Typography>\n            {currency==='INR' ?\n           <Typography className={classes.text}>RS {PRODUCT_SLIDE[1].cost}</Typography>:\n           <Typography className={classes.text}>$ {PRODUCT_SLIDE[1].cost*conversionrate.current}</Typography>} \n            <Button size='large' className={classes.searchbutton}   variant='outlined' >Search Options</Button>\n        </Card>\n        </Grid> \n        <Grid item xs={12} sm={6} md={4}>\n        <Card className={classes.card}>\n            <img className={classes.image} src={container} alt='productimg' />\n            <Typography className={classes.text}>{PRODUCT_SLIDE[2].title}</Typography>\n            {currency==='INR' ?\n           <Typography className={classes.text}>RS {PRODUCT_SLIDE[2].cost}</Typography>:\n           <Typography className={classes.text}>$ {Number(PRODUCT_SLIDE[2].cost)*Number(conversionrate.current)}</Typography>} \n            <Button size='large' className={classes.searchbutton}   variant='outlined' >Search Options</Button>\n        </Card>\n        </Grid>  \n       </Grid>  \n      </>  \n\n    );\n};\n\nconst usestyles=makeStyles({\n   image:{\n       width:'300px',\n       height:'400px'\n   },\n   header:{\n    textAlign:'center',\n    fontSize:'30px !important',\n    fontWeight:'200 !important',\n    marginTop:'2%',\n    marginBottom:'2%'\n  },\n  searchbutton:{\n     backgroundColor:'green',\n     color:'white',\n     marginLeft:'25%',\n     '&:hover':{\n        backgroundColor:'green',\n        color:'white'}\n     },\n     text:{\n        textAlign:'center'\n     },\n     card:{\n        alignItems:'center',\n        cursor:'pointer',\n        marginLeft:'2%',\n        width:'350px',\n        boxShadow:' 0 0 5px 5px #dddddd',\n        height:'500px !important',\n        marginTop:'2%'\n     },\n     formControl:{\n       marginLeft:'80%'\n     }\n});\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}